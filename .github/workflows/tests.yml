name: Python Application Tests

# Запуск при push в основную ветку (main) и при создании/обновлении Pull Request к основной ветке
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest # Используем последнюю версию Ubuntu

    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11'] # Можно тестировать на нескольких версиях Python

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Используем последнюю версию для checkout

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5 # Используем последнюю версию для setup-python
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # Кэширование зависимостей pip

    - name: Install Poppler (for PDF tests)
      run: |
        sudo apt-get update
        sudo apt-get install -y poppler-utils
      # Для macOS (если бы runs-on: macos-latest):
      # run: brew install poppler

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest coverage Pillow docx2txt pdf2image
        # Если у вас есть requirements.txt, лучше использовать его:
        # pip install -r requirements.txt

    - name: Run tests with coverage
      run: |
        coverage run -m pytest
      # Если вы хотите, чтобы workflow упал при низком покрытии:
      # coverage run -m pytest && coverage report --fail-under=85

    - name: Generate coverage report
      run: |
        coverage report -m
        coverage html # Генерируем HTML отчет

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      if: success() || failure() # Загружать отчет всегда, чтобы можно было посмотреть при ошибке
      with:
        name: coverage-report-py${{ matrix.python-version }}
        path: htmlcov # Путь к директории с HTML-отчетом

    # Шаг для уведомлений (пример, требует настройки)
    # Этот шаг является базовым и может быть расширен с помощью сторонних Actions
    - name: Notify on failure
      if: failure() # Выполнять только если предыдущие шаги провалились
      run: |
        echo "::error ::Тесты не пройдены или возникла ошибка в workflow для Python ${{ matrix.python-version }}!"
        echo "Подробности смотрите в логах."
        # Здесь можно добавить вызов API для отправки уведомления в Slack, Telegram и т.д.
        # Например, используя https://github.com/marketplace/actions/slack-notify
        # или https://github.com/marketplace/actions/telegram-message

    - name: Notify on success
      if: success() # Выполнять только если все шаги успешны
      run: |
        echo "::notice ::Все тесты успешно пройдены для Python ${{ matrix.python-version }}!"
        # Здесь также можно добавить уведомление
